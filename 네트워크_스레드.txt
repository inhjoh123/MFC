윈도우데스크톱애플리케이션
api

프로젝트-> 속성-> c/c++ ->런타임 라이브러리 -> 다중스레드 디버깅(mtd)

필요 헤더파일
#include <process.h>

//스레드 생성 함수 원형
    //unsigned int _beginthreadex(
    //    void*       _Security, // 윈도우에서는 통상적으로 NULL
    //    unsigned    _StackSize, // 0 (10kbyte)
    //    unsigned    _StartAddress, // 스레드로 작동할 함수 이름.
    //    void*       _ArgList, // 인수 전달이 필요할때 ,필요없으면 NULL
    //    unsigned    _InitFlag, // 스레드 대기시간을 설정.0은 즉시 실행//거의 안씀
    //    unsigned*   _ThrdAddr // 스레드마다 고유 id를 얻는다
    //);

f1(NULL,);
표준함수가 첫번째 인수가 NULL인경우 세월이 흘러서 안쓰게 된경우
또는 정말로 NULL을 넣어야 하는경우

//함수안에 프로그램 넣어주면 이제 프로세스로서 메인돌고 스레드 돌고

//
_beginthread(NULL,0,ConnectThread,NULL,0,NULL);
    while (GetMessage(&msg, nullptr, 0, 0))
    {

//함수이름 앞에 _ 가 있는경우 운영체제 불문
리눅스건 윈도우건 사용가능 함수
//뒤에 ex가 붙은 함수는 extend로 업그레이드 된함수 ex붙은것 사용하는 것이 맞다
//다만 유지보수를 위해 제공은 한다. (기존프로그램들)

// 치명적인 결점이 있어서 업그레이드 된 함수는.(deprecate)표기되어나옴
//
unsigned __stdcall ConnectThread(void* pArg)//운영체제가 콜하니까 stdcall
{//인수전달은 하나밖에 안된다. 여러개 던지고 싶으면 구조체로 만들어서 던지면된다.
    //실행할것이 없어서 빠져나오는 것을 방지하기위해 스레드는반드시
    while (1) {

    }
    //탈출시
    _endthreadex(0);//0: 돌고있는 자기자신 스레드 확인

}
